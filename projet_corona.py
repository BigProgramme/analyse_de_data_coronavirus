# -*- coding: utf-8 -*-
"""projet_corona.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xrYnFIAsw0y3gBMmjcdfrlYPfZaP4Jm1
    
    @saintHeradMBOUMA 
"""

import pandas as pd
import plotly.express as px
import matplotlib.pyplot as plt

#chargement de données:

data = pd.read_csv('open_stats_coronavirus.csv', sep=';')

## affichage des stat descriptives:

stats = data.describe()
print(stats)

## vérification dess valeurs manquantes

missing_values = data.isnull().sum()
print(missing_values)

## Identification des pays avec le plus grand nombre de cas, de décès et de guérisons

country_most_cases = data[data['cas'] == data['cas'].max()]['nom'].values[0]

print(country_most_cases)

# pays avec le plus grand nombre de décès
country_most_deaths = data[data['deces'] == data['deces'].max()]['nom'].values[0]

print(country_most_deaths)

## pays avec le plus grand nombre de guérisons

country_most_recoveries = data[data['guerisons'] == data['guerisons'].max()]['nom'].values[0]

print(country_most_recoveries)



# suivi des évolutions temporelles des cas ...

# convertion de la colonne "date en type(datetime)"

data['date'] = pd.to_datetime(data['date'])
#Trie des données par date:

data = data.sort_values('date')

## Evolution temporelle des cas, des décès et des guérisons

plt.plot(data['date'], data['cas'], label='Cas')

plt.plot(data['date'], data['deces'], label='Décès')

plt.plot(data['date'], data['guerisons'], label='Guérisons')

plt.xlabel('Date')
plt.ylabel('Nombre de cas')
plt.title('Evolution temporelle des cas, des décès et des guérisons dans le monde')
plt.legend()

plt.xticks(rotation=90)

plt.show()

# Les stats mondiales:
total_cases = data['cas'].sum()

total_deaths = data['deces'].sum()

total_recoveries = data['guerisons'].sum()

## Graphique à barre:

categories = ['Cas', 'Décès', 'Guérisons']

values = [total_cases, total_deaths, total_recoveries]

plt.bar(categories, values, 0.4) #Diagramme en barre

plt.xlabel('Statistiques')
plt.ylabel('Nombre total')
plt.title('Statistiques mondiales COVID-19')


plt.show()



## Groupement des statistiques par pays:

country_stats = data.groupby('nom').sum().reset_index() #rétablir les index par défaut

# Générer une carte choroplèthe
fig = px.choropleth(country_stats, locations = 'nom', locationmode='country names', color='cas', title='Répartition géographique des cas de COVID-19')

fig.show()

## comparaison des stats avec les diagrammes...

# Sélectionner les pays à comparer
countries = ['france', 'italy', 'spain', 'germany', 'usa', 'taiwan', 'laos', 'grece', 'pologne','Corse']

# Filtrer les données pour les pays sélectionnés
selected_countries_data = data[data['nom'].isin(countries)]

# Créer un graphique de barres pour comparer les statistiques entre les pays
plt.figure(figsize=(8, 4))
plt.bar(selected_countries_data['nom'], selected_countries_data['cas'], label='Cas')

plt.bar(selected_countries_data['nom'], selected_countries_data['deces'], label='Décès')

plt.bar(selected_countries_data['nom'], selected_countries_data['guerisons'], label='Guérisons')

plt.xlabel('Pays')
plt.ylabel('Nombre')
plt.title('Comparaison des statistiques entre plusieurs pays')
plt.legend()
plt.show()